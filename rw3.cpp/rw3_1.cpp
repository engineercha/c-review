///*int와 char 변수를 한 개씩 선언하고 값을 대입하면서
//문자 A,X,?,@의 아스키코드와 숫자 55,85,100,120에 해당하는 문자를 각각 출력하기*/
//
//#include <stdio.h>
//int main(void) {
//	char c;
//	printf("문자 '%c'의 아스키코드는 %d입니다.\n", c = 'A', c);
//	printf("문자 '%c'의 아스키코드는 %d입니다.\n", c = 'X', c);
//	printf("문자 '%c'의 아스키코드는 %d입니다.\n", c = '?', c);
//	printf("문자 '%c'의 아스키코드는 %d입니다.\n\n", c = '@', c);
//
//	int n;
//	printf("아스키코드 %d에 해당하는 문자는 '%c' 입니다.\n", n = 55, n);
//	printf("아스키코드 %d에 해당하는 문자는 '%c' 입니다.\n", n = 85, n);
//	printf("아스키코드 %d에 해당하는 문자는 '%c' 입니다.\n", n = 100, n);
//	printf("아스키코드 %d에 해당하는 문자는 '%c' 입니다.\n\n", n = 120, n);
//
//
//	예제1
//	더한 결과값이 int의 범위(-2147483648~2147483647)를 벗어나면 overflowed 발생함. 오버플로우는 문법오류로 체크되지 않음
//	int num = 2147483647;
//	int i = 0;
//	for (i; i <= 2; i++)
//		printf("%d \n", n+i);
//	puts("");
//
//	예제2
//	char 변수가 실제로 저장하는 데이터는 문자의 아스키코드(정수값)임
//	char ch = 'A';
//	printf("ch의 값:%c \tch의 아스키코드:%d\n", ch, ch);
//	ch = 98;
//	printf("ch의 값:%c \tch의 아스키코드:%d\n", ch, ch);
//	printf("ch의 바로 다음 값:%c \tch의 바로 다음 아스키코드\n", ch + 1, ch + 1);
//	printf("ch로부터 세번째 뒤의 값:%c", ch + 3);
//}